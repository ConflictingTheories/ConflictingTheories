version: '3.8'
services:
  lb:
    container_name: 'lb'
    image: snf-load-balancer:latest
    restart: always
    volumes:
      - './load-balancer/certs:/etc/letsencrypt'
    depends_on:
      - 'storefront'
      - 'backend'
      - 'search'
      - 'minio'
    links:
      - 'minio:minio'
      - 'backend:backend'
      - 'search:search'
      - 'storefront:storefront'
    build:
      context: ./load-balancer/
    ports:
      - '80:80'
  # Storefront - Public Facing Interface for clients and customers
  storefront:
    build:
      context: ./storefront
    container_name: storefront
    depends_on:
      - backend
    ports:
      - '8000:8000'
  # Backend MedusaJS Server responsible for core logic of the store
  backend:
    build:
      context: ./backend
    image: backend:starter
    container_name: backend
    depends_on:
      - postgres
      - redis
      - search
      - minio
    env_file:
      - './backend/.env'
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-docker
      REDIS_URL: redis://redis
      MEILISEARCH_HOST: http://search:7700
      MINIO_ENDPOINT: http://minio:9002
      MINIO_DOMAIN: host.docker.internal
      PORT: 9000
    ports:
      - '9000:9000'
    volumes:
      - ./backend:/app/medusa
  # Meilisearch Search engine for Store product Searching
  search:
    image: getmeili/meilisearch:v1.0
    container_name: search
    ports:
      - '7700:7700'
    volumes:
      - ./backend/meili_data:/meili_data
  # Postgres DB for Core Data Storage
  postgres:
    restart: always
    container_name: postgres
    image: postgres:10.4
    volumes:
      - './backend/db_data:/var/lib/postgresql'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-docker
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'medusa-docker', '-U', 'postgres']
      retries: 3
      timeout: 5s
  # MinIO for Object Storage (S3 Alternative)
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '9002:9002'
      - '9001:9001'
    volumes:
      - ./backend/minio_data:/data
    env_file: './backend/.env'
    command: server --address ":9002" --console-address ":9001" /data
  # Redis DB for Notifications, Events, Subscriptions
  redis:
    container_name: redis
    image: redis
    ports:
      - '6379:6379'
volumes:
  node_modules:
