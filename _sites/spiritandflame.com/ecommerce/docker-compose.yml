version: '3.8'
services:
  # Admin Panel - Interface for storage management
  admin:
    build:
      context: ./admin
    ports:
      - '7000:7000'
  # Storefront - Public Facing Interface for clients and customers
  storefront:
    build:
      context: ./storefront
    ports:
      - '8000:8000'
  # Backend MedusaJS Server responsible for core logic of the store
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:starter
    container_name: medusa-server-default
    depends_on:
      - postgres
      - redis
      - search
    env_file:
      - './backend/.env'
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-docker
      REDIS_URL: redis://redis
      MEILISEARCH_HOST: http://search:7700
      MINIO_ENDPOINT: http://minio:9000
      PORT: 9000
    ports:
      - '9000:9000'
    volumes:
      - ./backend:/app/medusa
  # Meilisearch Search engine for Store product Searching
  search:
    image: getmeili/meilisearch:v1.0
    container_name: medusa-server-search
    environment:
      MEILI_MASTER_KEY: 'Oiy5JZoyRfKw35zg849uONb7d2fPp-id2WGLfcodCEs'
    ports:
      - '7700:7700'
    volumes:
      - ./backend/meili_data:/meili_data
  # Postgres DB for Core Data Storage
  postgres:
    image: postgres:10.4
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-docker
  # MinIO for Object Storage (S3 Alternative)
  minio:
    image: minio/minio
    ports:
      - '9002:9000'
      - '9001:9001'
    volumes:
      - ./db:/data
    env_file: './backend/.env'
    command: server --console-address ":9001" /data
  # Redis DB for Notifications, Events, Subscriptions
  redis:
    image: redis
    ports:
      - '6379:6379'

volumes:
  node_modules:
